ncverilog(64): 15.20-s084: (c) Copyright 1995-2020 Cadence Design Systems, Inc.
TOOL:	ncverilog	15.20-s084: Started on Jul 20, 2022 at 22:52:26 CST
ncverilog
	tb.sv
	SME_syn.v
	tsmc13.v
	+access+r
	+nc64bit
Recompiling... reason: file './tb.sv' is newer than expected.
	expected: Wed Jul 20 22:52:14 2022
	actual:   Wed Jul 20 22:52:24 2022
file: tb.sv
	module worklib.testfixture:sv
		errors: 0, warnings: 0
		Caching library 'worklib' ....... Done
	Elaborating the design hierarchy:
  DFFRX1 \check_reg[7]  ( .D(n153), .CK(clk), .RN(n1), .Q(check[7]) );
                      |
ncelab: *W,CUVWSP (./SME_syn.v,47|22): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[4]  ( .D(n92), .CK(clk), .RN(n69), .Q(s7[4]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,92|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[3]  ( .D(n93), .CK(clk), .RN(n69), .Q(s7[3]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,96|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[0]  ( .D(n96), .CK(clk), .RN(n69), .Q(s7[0]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,112|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[1]  ( .D(n95), .CK(clk), .RN(n69), .Q(s7[1]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,113|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[5]  ( .D(n91), .CK(clk), .RN(n69), .Q(s7[5]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,114|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[2]  ( .D(n94), .CK(clk), .RN(n69), .Q(s7[2]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,115|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[6]  ( .D(n90), .CK(clk), .RN(n68), .Q(s7[6]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,116|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[7]  ( .D(n89), .CK(clk), .RN(n68), .Q(s7[7]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,117|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \check_reg[7]  ( .D(n180), .CK(clk), .RN(n1), .Q(check[7]) );
                      |
ncelab: *W,CUVWSP (./SME_syn.v,275|22): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[4]  ( .D(n241), .CK(clk), .RN(n69), .Q(s7[4]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,321|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[3]  ( .D(n240), .CK(clk), .RN(n69), .Q(s7[3]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,324|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[0]  ( .D(n237), .CK(clk), .RN(n69), .Q(s7[0]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,340|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[1]  ( .D(n238), .CK(clk), .RN(n69), .Q(s7[1]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,341|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[5]  ( .D(n242), .CK(clk), .RN(n69), .Q(s7[5]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,342|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[2]  ( .D(n239), .CK(clk), .RN(n69), .Q(s7[2]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,343|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[6]  ( .D(n243), .CK(clk), .RN(n68), .Q(s7[6]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,344|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \s7_reg[7]  ( .D(n244), .CK(clk), .RN(n68), .Q(s7[7]) );
                   |
ncelab: *W,CUVWSP (./SME_syn.v,345|19): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 star_detected_reg ( .D(n5), .CK(clk), .RN(n1), .Q(star_detected) );
                         |
ncelab: *W,CUVWSP (./SME_syn.v,1346|25): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 opening_detected_reg ( .D(n6), .CK(clk), .RN(n1), .Q(opening_detected) );
                            |
ncelab: *W,CUVWSP (./SME_syn.v,1362|28): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \c_out_reg[4]  ( .D(c_out_next[4]), .CK(clk), .RN(n3), .Q(c_out[4])
                      |
ncelab: *W,CUVWSP (./SME_syn.v,1382|22): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \c_out_reg[5]  ( .D(c_out_next[5]), .CK(clk), .RN(n3), .Q(c_out[5])
                      |
ncelab: *W,CUVWSP (./SME_syn.v,1384|22): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \c_out_reg[3]  ( .D(c_out_next[3]), .CK(clk), .RN(n3), .Q(c_out[3])
                      |
ncelab: *W,CUVWSP (./SME_syn.v,1386|22): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \c_out_reg[2]  ( .D(c_out_next[2]), .CK(clk), .RN(n3), .Q(c_out[2])
                      |
ncelab: *W,CUVWSP (./SME_syn.v,1388|22): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \c_out_reg[1]  ( .D(c_out_next[1]), .CK(clk), .RN(n3), .Q(c_out[1])
                      |
ncelab: *W,CUVWSP (./SME_syn.v,1390|22): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \c_out_reg[0]  ( .D(c_out_next[0]), .CK(clk), .RN(n3), .Q(c_out[0])
                      |
ncelab: *W,CUVWSP (./SME_syn.v,1392|22): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \state_reg[0]  ( .D(state_next[0]), .CK(clk), .RN(n5), .Q(state[0])
                      |
ncelab: *W,CUVWSP (./SME_syn.v,1434|22): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  Pattern_String_Comparator_1 PSC2 ( .s0(s0), .s1(s1), .s2(s2), .s3(s3), .s4(
                                 |
ncelab: *W,CUVWSP (./SME_syn.v,11369|33): 1 output port was not connected:
ncelab: (./SME_syn.v,10217): match1_space

  DFFRX1 \dout_reg[4]  ( .D(din[4]), .CK(clk), .RN(n1), .Q(dout[4]) );
                     |
ncelab: *W,CUVWSP (./SME_syn.v,11222|21): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \dout_reg[3]  ( .D(din[3]), .CK(clk), .RN(n1), .Q(dout[3]) );
                     |
ncelab: *W,CUVWSP (./SME_syn.v,11223|21): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \dout_reg[2]  ( .D(din[2]), .CK(clk), .RN(n1), .Q(dout[2]) );
                     |
ncelab: *W,CUVWSP (./SME_syn.v,11224|21): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \dout_reg[1]  ( .D(din[1]), .CK(clk), .RN(n1), .Q(dout[1]) );
                     |
ncelab: *W,CUVWSP (./SME_syn.v,11225|21): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 \dout_reg[0]  ( .D(din[0]), .CK(clk), .RN(n1), .Q(dout[0]) );
                     |
ncelab: *W,CUVWSP (./SME_syn.v,11226|21): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

  DFFRX1 dout_reg ( .D(din), .CK(clk), .RN(n1), .Q(dout) );
                |
ncelab: *W,CUVWSP (./SME_syn.v,11236|16): 1 output port was not connected:
ncelab: (./tsmc13.v,18240): QN

ncelab: *W,DSEMEL: This SystemVerilog design will be simulated as per IEEE 1800-2009 SystemVerilog simulation semantics. Use -disable_sem2009 option for turning off SV 2009 simulation semantics.
	Reading SDF file from location "SME_syn.sdf"
	Annotating SDF timing data:
		Compiled SDF file:     SME_syn.sdf.X
		Log file:              
		Backannotation scope:  testfixture.u_SME
		Configuration file:    
		MTM control:           
		Scale factors:         
		Scale type:            
	Annotation completed successfully...
	SDF statistics: No. of Pathdelays = 31574  Annotated = 91.19% -- No. of Tchecks = 3750  Annotated = 68.00% 
				        Total 	   Annotated	  Percentage
		 Path Delays	       31574	       28793	       91.19
		       $hold	          64	           0	        0.00
		      $width	        1642	        1275	       77.65
		  $setuphold	        2044	        1275	       62.38
  assign fill_space = N63;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1427|7): The interconnect source testfixture.u_SME.FSM1.U3.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.U475.AN.  The port annotation will still occur.
  assign push_complete = N97;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,37|7): The interconnect source testfixture.u_SME.PSR1.U34.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.U456.A.  The port annotation will still occur.
  assign push_complete = N97;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,37|7): The interconnect source testfixture.u_SME.PSR1.U34.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.U448.B0.  The port annotation will still occur.
  assign fill_space = N63;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1427|7): The interconnect source testfixture.u_SME.FSM1.U3.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.U434.A.  The port annotation will still occur.
  assign fill_space = N63;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1427|7): The interconnect source testfixture.u_SME.FSM1.U3.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.U432.A.  The port annotation will still occur.
  assign fill_space = N63;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1427|7): The interconnect source testfixture.u_SME.FSM1.U3.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.U430.A.  The port annotation will still occur.
  assign fill_space = N63;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1427|7): The interconnect source testfixture.u_SME.FSM1.U3.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.U428.A.  The port annotation will still occur.
  assign fill_space = N63;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1427|7): The interconnect source testfixture.u_SME.FSM1.U3.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.U424.A.  The port annotation will still occur.
  assign fill_space = N63;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1427|7): The interconnect source testfixture.u_SME.FSM1.U3.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.U423.A.  The port annotation will still occur.
  assign fill_space = N63;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1427|7): The interconnect source testfixture.u_SME.FSM1.U3.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.U422.A.  The port annotation will still occur.
  assign push_complete = N97;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,265|7): The interconnect source testfixture.u_SME.PSR2.U32.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.U418.A.  The port annotation will still occur.
  assign push_complete = N97;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,265|7): The interconnect source testfixture.u_SME.PSR2.U32.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.U392.B0.  The port annotation will still occur.
  assign string_shift_en = N9;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1426|7): The interconnect source testfixture.u_SME.FSM1.U6.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.SSR1.U119.A.  The port annotation will still occur.
  assign counter_reset = pattern_reset_en;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1428|7): The interconnect source testfixture.u_SME.FSM1.U10.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.ctr.U15.B.  The port annotation will still occur.
  assign counter_reset = pattern_reset_en;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1428|7): The interconnect source testfixture.u_SME.FSM1.U10.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.ctr.U10.B.  The port annotation will still occur.
  assign counter_reset = pattern_reset_en;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1428|7): The interconnect source testfixture.u_SME.FSM1.U10.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.ctr.U6.B.  The port annotation will still occur.
  assign counter_reset = pattern_reset_en;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1428|7): The interconnect source testfixture.u_SME.FSM1.U10.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.ctr.U5.B.  The port annotation will still occur.
  assign counter_reset = pattern_reset_en;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1428|7): The interconnect source testfixture.u_SME.FSM1.U10.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.ctr.U4.B.  The port annotation will still occur.
  assign counter_reset = pattern_reset_en;
       |
ncelab: *W,SDFNCAP (./SME_syn.v,1428|7): The interconnect source testfixture.u_SME.FSM1.U10.Y is separated by a unidirectional continuous assign from the destination testfixture.u_SME.ctr.U3.B.  The port annotation will still occur.
	Building instance overlay tables: .................... Done
	Generating native compiled code:
		worklib.testfixture:sv <0x3114a94d>
			streams:  15, words: 30501
	Building instance specific data structures.
	Loading native compiled code:     .................... Done
	Design hierarchy summary:
		                     Instances  Unique
		Modules:                  8652     624
		UDPs:                      671      12
		Primitives:              13100      10
		Timing outputs:           9118     548
		Registers:                 610     193
		Scalar wires:             9710       -
		Expanded wires:            360      45
		Always blocks:               5       5
		Initial blocks:             11      11
		Cont. assignments:           0       5
		Pseudo assignments:          5       5
		Timing checks:            5794     481
		Interconnect:            19544       -
		Delayed tcheck signals:   1275     465
		Compilation units:           1       1
		Simulation timescale:      1ps
	Writing initial simulation snapshot: worklib.testfixture:sv
Loading snapshot worklib.testfixture:sv .................... Done
ncsim: *W,DSEM2009: This SystemVerilog design is simulated as per IEEE 1800-2009 SystemVerilog simulation semantics. Use -disable_sem2009 option for turning off SV 2009 simulation semantics.
*Verdi* Loading libsscore_ius152.so
ncsim> source /usr/cad/cadence/INCISIV/cur/tools/inca/files/ncsimrc
ncsim> run
FSDB Dumper for IUS, Release Verdi_O-2018.09, Linux x86_64/64bit, 08/30/2018
(C) 1996 - 2018 by Synopsys, Inc.
*Verdi* FSDB WARNING: The FSDB file already exists. Overwriting the FSDB file may crash the programs that are using this file.
*Verdi* : Create FSDB file 'SME.fsdb'
*Verdi* : Begin traversing the scopes, layer (0).
*Verdi* : End of traversing.
*Verdi* : Begin traversing the MDAs, layer (0).
*Verdi* : Enable +mda and +packedmda dumping.
*Verdi* : End of traversing the MDAs.
----------------------
-- Simulation Start --
----------------------
  __________________________________________________________
  == String 1  "abcdijk lmnop q rstuv"
  -- Pattern 1  "1234"
       cycle 2e, expect(0,--) , get(0,--) >> Pass
  -- Pattern 2  "abcd"
       cycle 3a, expect(1,00) , get(1,00) >> Pass
  -- Pattern 3  "dijk"
       cycle 46, expect(1,03) , get(1,03) >> Pass
  -- Pattern 4  "pqrst"
       cycle 52, expect(0,--) , get(0,--) >> Pass
  -- Pattern 5  "pqr.t"
       cycle 5e, expect(0,--) , get(0,--) >> Pass
  -- Pattern 6  "c...k"
       cycle 6a, expect(1,02) , get(1,02) >> Pass
  -- Pattern 7  "^lmno"
       cycle 76, expect(1,08) , get(1,08) >> Pass
  -- Pattern 8  "rstuv$"
       cycle 82, expect(1,10) , get(1,10) >> Pass
  -- Pattern 9  "^rmn"
       cycle 8e, expect(0,--) , get(0,--) >> Pass
  -- Pattern a  "ijk l$"
       cycle 9a, expect(0,--) , get(0,--) >> Pass
  -- Pattern b  "v"
       cycle a6, expect(1,14) , get(1,14) >> Pass
  -- Pattern c  "lmnoprst"
       cycle b2, expect(0,--) , get(0,--) >> Pass
  -- Pattern d  "^ijk$"
       cycle be, expect(0,--) , get(0,--) >> Pass
  -- Pattern e  "^q$"
       cycle ca, expect(1,0e) , get(1,0e) >> Pass
  __________________________________________________________
  == String 2  "2x1=2 2x2=4 2x3=6"
  -- Pattern 1  "^2.2.2"
       cycle f2, expect(0,--) , get(0,--) >> Pass
  -- Pattern 2  "2.2.2"
       cycle fe, expect(1,04) , get(1,04) >> Pass
  -- Pattern 3  "^2.2.4$"
       cycle 10a, expect(1,06) , get(1,06) >> Pass
  -- Pattern 4  "."
       cycle 116, expect(1,00) , get(1,00) >> Pass
  -- Pattern 5  "^.."
       cycle 122, expect(1,00) , get(1,00) >> Pass
  -- Pattern 6  "^.$"
       cycle 12e, expect(0,--) , get(0,--) >> Pass
  -- Pattern 7  "2.$"
       cycle 13a, expect(0,--) , get(0,--) >> Pass
  -- Pattern 8  "2x4=7"
       cycle 146, expect(0,--) , get(0,--) >> Pass
  -- Pattern 9  "3=6-3"
       cycle 152, expect(0,--) , get(0,--) >> Pass
  -- Pattern a  "1.2=2"
       cycle 15e, expect(0,--) , get(0,--) >> Pass
  -- Pattern b  "2*2=4"
       cycle 170, expect(1,00) , get(1,00) >> Pass
  __________________________________________________________
  == String 3  "She sees cheese"
  -- Pattern 1  "ees."
       cycle 19a, expect(1,05) , get(1,05) >> Pass
  -- Pattern 2  "ees.$"
       cycle 1a6, expect(1,0b) , get(1,0b) >> Pass
  -- Pattern 3  "e..se"
       cycle 1b2, expect(0,--) , get(0,--) >> Pass
  -- Pattern 4  "e..ee$"
       cycle 1be, expect(0,--) , get(0,--) >> Pass
  -- Pattern 5  "^ees*"
       cycle 1cb, expect(0,--) , get(0,--) >> Pass
  -- Pattern 6  "hee*se"
       cycle 1de, expect(1,0a) , get(1,0a) >> Pass
  -- Pattern 7  "he.s"
       cycle 1ea, expect(1,01) , get(1,01) >> Pass
  -- Pattern 8  "*see$"
       cycle 1f7, expect(0,--) , get(0,--) >> Pass
  -- Pattern 9  "se*ce"
       cycle 20a, expect(0,--) , get(0,--) >> Pass
  __________________________________________________________
  == String 4  "But she said the butter's bitter"
  -- Pattern 1  "sa*said"
       cycle 23b, expect(0,--) , get(0,--) >> Pass
  -- Pattern 2  "b*tter"
       cycle 24c, expect(1,11) , get(1,11) >> Pass
  -- Pattern 3  "b*tter$"
       cycle 25c, expect(1,11) , get(1,11) >> Pass
  -- Pattern 4  "ut*r"
       cycle 270, expect(1,01) , get(1,01) >> Pass
  -- Pattern 5  "ut*tted"
       cycle 281, expect(0,--) , get(0,--) >> Pass
  -- Pattern 6  "^ut*tter"
       cycle 292, expect(0,--) , get(0,--) >> Pass
  -- Pattern 7  "*tered"
       cycle 29f, expect(0,--) , get(0,--) >> Pass
  __________________________________________________________
  == String 5  "He threw three free throws"
  -- Pattern 1  "thr*the$"
       cycle 2ca, expect(0,--) , get(0,--) >> Pass
  -- Pattern 2  "^thro*th"
       cycle 2dd, expect(0,--) , get(0,--) >> Pass
  -- Pattern 3  ".ree th"
       cycle 2e9, expect(1,0f) , get(1,0f) >> Pass
  -- Pattern 4  ".ree  fr"
       cycle 2f5, expect(0,--) , get(0,--) >> Pass
  -- Pattern 5  ".ree *re"
       cycle 308, expect(1,0a) , get(1,0a) >> Pass
  -- Pattern 6  "re. thr"
       cycle 314, expect(1,05) , get(1,05) >> Pass
  -- Pattern 7  "ee*ee fr"
       cycle 324, expect(0,--) , get(0,--) >> Pass
  -- Pattern 8  "ee*ee th"
       cycle 334, expect(1,0c) , get(1,0c) >> Pass
  -- Pattern 9  "re*ee.$"
       cycle 345, expect(0,--) , get(0,--) >> Pass
  -- Pattern a  "^...$"
       cycle 351, expect(0,--) , get(0,--) >> Pass
  -- Pattern b  "^....$"
       cycle 35d, expect(1,0f) , get(1,0f) >> Pass
----------------------------------
-- Simulation finish, ALL PASS  --
-- cycle =862 , Score =100       --
----------------------------------
Simulation complete via $finish(1) at time 6034 NS + 0
./tb.sv:205                     $finish;
ncsim> exit
TOOL:	ncverilog	15.20-s084: Exiting on Jul 20, 2022 at 22:52:29 CST  (total: 00:00:03)
